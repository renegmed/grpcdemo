Pluralsight - Enhancing Application Communication with gRPC

Install gRPC tooling
The -u flag instructs get to use the network to update the named packages 
and their dependencies. By default, get uses the network to check out 
missing packages but does not use it to look for updates to existing packages. 

$> go get -u google.golang.org/grpc

go get -u golang.org/x/net/context



Install protocol buffer tooling

go get -u github.com/golang/protobuf/proto 

go get -u github.com/golang/protobuf/protoc-gen-go

Generating Source Code

$> ./build-proto.sh

 
run the server

$> go run server/main.go

build and run server

$ go install grpc-demo/server

$ ../../bin/server

$ ./install-server.sh

$ ./run-server.sh 


Build and run client 

$ ./run-client.sh 1


or to run client only

$ ../../bin/client -o 1



To generate keys:

$ go run $GOROOT/src/crypto/tls/generate_cert.go -host localhost


Unary Messages 

To get details of Employee with badge number 2080, client runs 

$ ./run-client.sh 2 

or if already installed

$ ../../bin/client -o 2 

results into 

$ id:1 badgeNumber:2080 firstName:"Grace" lastName:"Decker" vacationAccrualRate:2 vacationAccrued:30



Server Streaming

To get all Employee, the client runs 

$ ./run-client.sh 3 

or if already installed

$ ../../bin/client -o 3

Result:

id:1 badgeNumber:2080 firstName:"Grace" lastName:"Decker" vacationAccrualRate:2 vacationAccrued:30
id:2 badgeNumber:7538 firstName:"Amity" lastName:"Fuller" vacationAccrualRate:2.3 vacationAccrued:23.4
id:3 badgeNumber:5144 firstName:"Keaton" lastName:"Willis" vacationAccrualRate:3 vacationAccrued:31.7



Client Streaming

Client is sending big image file to server with command 

$ ./run-client.sh 4 

or if already installed

$ ../../bin/client -o 4



